begin
procedure swap(a: int[], i: int, j: int) =
     { tmp: int; tmp := a[i]; a[i] := a[j]; a[j] := tmp},

procedure printA(a: int[], len:int) = {i: int;  i:= 0; do ! i=len -> print a[i]; i:= i+1 od},

procedure partition(a : int[], lo: int, hi: int, p: ^int) =
{  pivot : int,
   swapPoint : int,
   iter : int;

   pivot := a[lo];
   swapPoint := lo;
   iter := lo;

   do iter <= hi - 1
   | a[iter] <= pivot -> swap(a, swapPoint, iter);
                         swapPoint := swapPoint + 1
  od ;
  swap(a, swapPoint, hi)

  p^ := swapPoint
},

procedure qs(a: int[], i: int, j:int) =
{ p: int ;
  if i<j -> partition(a, i, j, &p);
		        qs(a,i,p - 1);
		        qs(a,p + 1,j)
  | true -> skip
  fi },

procedure quicksort(a: int[], len: int) = qs(a, 0, len - 1) ,

a: int[15],
len: int,
i: int ;
len := 15;
i := 0 ;
do i< len-> a[i] := len-i; i:= i+1 od;

a[1]:= 3;

quicksort(a,len)
end
